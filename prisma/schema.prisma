generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  accounts      Account[]
  sessions      Session[]
  aiTools       AiTool[]
  bookmarks     Bookmark[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model AiTool {
  id               String        @id @default(cuid())
  title            String
  toolDescription  String
  shortDescription String
  useCase1         String
  useCase2         String
  useCase3         String
  price            Int
  pricePlan        PriceFormat
  payment          PaymentStatus
  toolURL          String        @unique
  toolFeature      String
  views            Int           @default(0)
  toolTags         String[] // Use an array for tags
  toolScreenshot   String // You can store a URL to the screenshot image
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  user             User          @relation(fields: [userId], references: [id])
  userId           String
  bookmarks        Bookmark[]
  category         String
  subcategorie     String
}

model Bookmark {
  id        String   @id @default(cuid())
  userId    String
  toolId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  tool      AiTool   @relation(fields: [toolId], references: [id])
}

model Category {
  id            String   @id @default(cuid())
  name          String   @unique
  subcategories String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum PaymentStatus {
  PREMIUM
  FREE
  PAID
  FREE_TRIAL
  CONTACT_FOR_PRICING
}

enum PriceFormat {
  DOLLARS_PER_MONTH
  DOLLARS_PER_WEEK
  DOLLARS_PER_MINUTE
}
